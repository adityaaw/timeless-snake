name: Maestro E2E Test

on:
  workflow_dispatch:
    inputs:
      branch:
        description: 'Branch name for EAS build'
        required: true
        default: 'master'
      profile:
        description: 'EAS build profile (e.g. preview, production)'
        required: true
        default: 'preview'
        type: choice
        options:
          - preview
          - production
      commit:
        description: 'Commit SHA for EAS build'
        required: false

jobs:
  e2e-tests:
    runs-on: ubuntu-latest

    steps:
    - name: üèó Setup repo
      uses: actions/checkout@v4.2.2
      with:
        fetch-depth: 0

    - name: üèó Set up Node
      uses: actions/setup-node@v4.2.0
      with:
        node-version: 20.x
    
    - name: üèó Set up Java
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: '17'
    
    - name: üèó Setup yarn
      run: npm install -g yarn
    
    - name: üì¶ Install dependencies
      run: yarn install
    
    - name: üèó Setup EAS
      uses: expo/expo-github-action@v8
      with:
        eas-version: latest
        token: ${{ secrets.EXPO_TOKEN }}

    - name: üèó Fetch Latest EAS Build for Selected Branch/Profile
      id: get-apk-url
      env:
        ACT_BRANCH: ${{ env.ACT_BRANCH }}
        ACT_PROFILE: ${{ env.ACT_PROFILE }}
        ACT_COMMIT: ${{ env.ACT_COMMIT }}
        BRANCH: ${{ github.event.inputs.branch || env.ACT_BRANCH || 'master' }}
        PROFILE: ${{ github.event.inputs.profile || env.ACT_PROFILE || 'preview' }}
        COMMIT: ${{ github.event.inputs.commit || env.ACT_COMMIT }}
      run: |
        if [ -z "$COMMIT" ]; then
          echo "No commit provided, getting latest commit hash for branch: $BRANCH"
          COMMIT=$(git ls-remote origin "$BRANCH" | cut -f1)
        fi

        echo "‚úÖ Final commit to use: $COMMIT"
        echo "Looking for latest EAS build for branch: $BRANCH, profile: $PROFILE with commit: $COMMIT"
        
        LATEST_BUILD=$(eas build:list \
          --platform android \
          --status finished \
          --non-interactive \
          --json | jq -r \
          --arg commit "$COMMIT" \
          --arg profile "$PROFILE" \
          '[.[] | select(.gitCommitHash == $commit and .buildProfile == $profile)][0].artifacts.buildUrl')

        if [[ "$LATEST_BUILD" == "null" || -z "$LATEST_BUILD" ]]; then
          echo "No matching build found for branch/profile"
          exit 1
        fi

        echo "apk_url=$LATEST_BUILD" >> $GITHUB_OUTPUT

    - name: üèó Download APK
      run: curl -L "${{ steps.get-apk-url.outputs.apk_url }}" -o app.apk

    - name: üèó Install Maestro CLI
      run: |
        curl -Ls "https://get.maestro.mobile.dev" | bash
        echo "$HOME/.maestro/bin" >> $GITHUB_PATH
    
    - name: üèó Enable KVM
      run: |
        echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
        sudo udevadm control --reload-rules
        sudo udevadm trigger --name-match=kvm

    - name: üöÄ Start Android Emulator & Run Maestro Tests
      id: run-maestro
      uses: reactivecircus/android-emulator-runner@v2
      continue-on-error: true
      with:
        api-level: 30
        target: google_apis
        arch: x86_64
        profile: pixel_3
        emulator-options: -no-window -no-audio
        script: |
          echo "‚úÖ Android emulator is ready, installing the APK"
          adb install app.apk
          adb shell input keyevent 82
          echo "‚úÖ APK installed, running Maestro tests"
          maestro test .maestro

    - name: ‚ùå Upload Maestro Logs on failure
      if: steps.run-maestro.outcome == 'failure'
      uses: actions/upload-artifact@v4.6.1
      with:
        name: maestro-failure-logs
        path: ~/.maestro/tests